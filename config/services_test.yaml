services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php,Security}'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Security\User\ExtranetUserProvider:
        public: false
        arguments:
        - '@doctrine'
        - 'App\Entity\Users'
        -
            login: 'login'
            auth_method: ''

    App\Security\ExtranetAuthenticationProvider:
        public: false
        arguments: ['@App\Security\User\ExtranetUserProvider', '','','','', '@App\Service\Ldap\LdapService']


    App\Service\Ldap\LdapService:
        autowire: false
        arguments:
            $host1: 'SERVDC3'
            $host2: 'SERVDC1'
            $dn: 'domaine.lan'

    App\EventListener\BeforeRequestListener:
        arguments: ["@doctrine.orm.entity_manager", "@security.token_storage", "@annotation_reader"]
        tags:
        -
            name: kernel.event_listener
            event: kernel.request
            method: onKernelRequest

    App\Service\SessionFilterService:
        arguments: ["@doctrine.orm.entity_manager", "@security.token_storage", "@annotation_reader"]
